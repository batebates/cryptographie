# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# Each scope (e.g. '.source.coffee' above) can only be declared once.
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# https://atom.io/docs/latest/using-atom-basic-customization#cson
'.source.ruby':
  'Class creation':
    'prefix': 'cl'
    'body': """
      #<b>Auteur  :</b> Decrand Baptiste
      #
      #<b>Version :</b> $1
      #
      #<b>Date    :</b> $2
      #
      #===${3:butdelaclasse}
      #<b>Liste des méthodes
      #*
      #</b>
      class $4
        #== Variable de classe ==
        $5
        #===========================
        #== Variables d'instance ==
        $6
        #===========================

        private_class_method :new

        def initialize($7)#:nodoc:
        end
        def $4.creer($7)
          new($7)
        end
        $8
      end
      """
  'Def creation':
    'prefix':'def'
    'body':"""
      #===${1:Descriptiondelamethode}
      #
      #===Paramètres :
      #* <b></b> :
      def ${2:methodName}($3)
      $4
      end
      """

'.source.java':
  'class creation':
    'prefix':'cl'
    'body':"""
      /**
      *@author Decrand Baptiste
      *
      *@version $1
      *
      *@date $2
      *
      *${3:butdelaclasse}
      *Liste des méthodes:
      *
      **/
      public class ${4:Nomdelaclasse}{
        /*== Variable de classe ==*/
        $5
        /*===========================*/
        /*== Variables d'instance ==*/
        $6
        /*===========================*/

        // constructeur
         public ${4:Nomdelaclasse}($7){
           $8
         }
        //méthodes
        $9
      }
      """
  'methode creation':
    'prefix':'meth'
    'body':"""
      /**
       * ${5:butDelaMethode}
       *
       *Paramètres:
       *@param ${6:type Nomparam} : ${7:detail}
       *
       */
      ${1:  private} ${2:typeDeRetour} ${3:nomFonction}(${4:listeParametres}){
        $8
      }
      """
  'methode test':
    'prefix':'test'
    'body':"""
      public static void main(String args[]){

      }
      """
  'printf':
    'prefix':'print'
    'body':'System.out.println($1);'
